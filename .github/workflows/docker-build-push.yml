# 工作流名称
name: CI-CD - Build and Push Docker Image

# 触发工作流的事件
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'  # 生产版本标签，如 v2.1.0
      - 'b[0-9]+.[0-9]+.[0-9]+'  # 测试版本标签，如 b2.1.0
  workflow_dispatch: # 允许手动触发

# 工作流执行的任务
jobs:
  build-and-push:
    # 任务运行的环境
    runs-on: ubuntu-latest

    # 任务执行的步骤
    steps:
      # 步骤 1: 检出代码
      - name: Checkout repository
        uses: actions/checkout@v4

      # 步骤 2: 登录到 Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 步骤 3: 提取元数据（标签和注释）
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: docker.io/sanqi37/webnote
          tags: |
            # 策略：根据 Git 标签的前缀（v 或 b）来决定生成的 Docker 标签

            # 规则 1: 处理生产标签 (以 v 开头)
            # 例如: git tag v2.1.0 -> docker tags: 2.1.0, 2.1, 2, latest
            type=semver,pattern={{version}},prefix=v,enable=${{ startsWith(github.ref, 'refs/tags/v') }},priority=200
            type=semver,pattern={{major}}.{{minor}},prefix=v,enable=${{ startsWith(github.ref, 'refs/tags/v') }},priority=200
            type=semver,pattern={{major}},prefix=v,enable=${{ startsWith(github.ref, 'refs/tags/v') }},priority=200
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }},priority=100 

            # 规则 2: 处理测试标签 (以 b 开头)
            # 例如: git tag b2.1.0 -> docker tag: 2.1.0-beta
            # 我们特意添加 '-beta' 后缀，让 Docker 标签更具可读性
            type=match,pattern=b(.*),group=1,suffix=-beta,enable=${{ startsWith(github.ref, 'refs/tags/b') }}
            # 规则 3: 为最新的测试版本创建一个 'beta' 标签
            type=raw,value=beta,enable=${{ startsWith(github.ref, 'refs/tags/b') }}

      # 步骤 4: 设置 Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 步骤 5: 构建并推送到 Docker Hub
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
